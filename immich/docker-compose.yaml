---
#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of
    # [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage
      # location on your system, edit the value of UPLOAD_LOCATION .env
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    # ports:
    #   - 2283:3001
    depends_on:
      - redis
      - database
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photo-app.entrypoints=web-secure"
      - "traefik.http.routers.photo-app.rule=Host(`${PHOTO_DOMAIN}`)"
      - "traefik.http.routers.photo-app.tls=true"
      - "traefik.http.routers.photo-app.tls.certresolver=default"
      - "traefik.http.routers.photo-app.middlewares=security-headers"
      - "traefik.http.services.photo-app.loadbalancer.server.port=2283"
    healthcheck:
      disable: false
    networks:
      - backend
      - traefik_proxy

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino]
    # to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration
    # see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl]
    # for accelerated inference - use the `-wsl` version for WSL2 where applicable
    env_file:
      - .env
    volumes:
      - model-cache:/cache
    restart: always
    networks:
      - backend
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - backend

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage
      # location on your system, edit the value of DB_DATA_LOCATION .env
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' \
              --username='${DB_USERNAME}' || exit 1; \
              Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' \
               --username='${DB_USERNAME}' --tuples-only --no-align \
               --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM \
               pg_stat_database')"; echo "checksum failure count is $$Chksum"; \
               [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", \
              'search_path="$$user", public, vectors', "-c", \
              "logging_collector=on", "-c", "max_wal_size=2GB", "-c", \
              "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always
    networks:
      - backend

volumes:
  model-cache:

networks:
  traefik_proxy:
    external: true
  backend:
    external: true
