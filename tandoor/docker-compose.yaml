---
version: "3.3"

services:
  db_recipes:
    restart: unless-stopped
    image: postgres:16-alpine
    volumes:
      - /srv/tandoor/postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - backend

  web_recipes:
    image: vabene1111/recipes:latest

    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - /srv/tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    networks:
      - backend

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - /srv/tandoor/mediafiles:/media/recipes:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tandoor.entrypoints=web-secure"
      - "traefik.http.routers.tandoor.rule=Host(`${TANDOOR_DOMAIN}`)"
      - "traefik.http.routers.tandoor.tls=true"
      - "traefik.http.routers.tandoor.tls.certresolver=default"
      - "traefik.http.routers.tandoor.middlewares=security-headers"
      - "traefik.http.services.tandoor.loadbalancer.server.port=80"
    depends_on:
      - web_recipes
    networks:
      - backend
      - traefik_proxy

networks:
  backend:
    external:
      name: backend
  traefik_proxy:
    external:
      name: traefik_proxy

volumes:
  nginx_config:
  staticfiles:
