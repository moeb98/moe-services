---
version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: traefik

    # comment in if you want to use command line config instead of config files
    # command:
    #   - --entrypoints.web.address=:80
    #   - --entrypoints.web-secure.address=:443
    #   - --providers.docker=true
    #   - --providers.docker.exposedByDefault=false
    #   - --providers.docker.network=traefik_proxy
    #   - --providers.docker.endpoint=unix:///var/run/docker.sock
    #   - --api.dashboard=true

    # for test purposes this is the let's encrypt staging server
    #   - --certificatesresolvers.default.acme.caserver=
    #   https://acme-staging-v02.api.letsencrypt.org/directory

    #   - --certificatesresolvers.default.acme.email=${ACME_EMAIL}
    #   - --certificatesresolvers.default.acme.storage=/config/acme.json
    #   - --certificatesresolvers.default.acme.tlschallenge=true
    #   - --log.filePath=/srv/docker/traefik/traefik.log
    #   - --log.format=json
    #   - --accesslog=true
    #   - --accesslog.filePath=/srv/docker/traefik/access.log
    #   - --accesslog.format=json

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime
      - "./config:/etc/traefik"
      - /srv/traefik/access.log:/srv/traefik/access.log
      - /srv/traefik/traefik.log:/srv/traefik/traefik.log

    labels:
      - "traefik.enable=true"

      # enable dashboard
      # - "traefik.http.routers.api.entrypoints=web-secure"
      # - "traefik.http.routers.api.rule=Host(`${TRAEFIK_DOMAIN}`)"
      # - "traefik.http.routers.api.tls=true"
      # - "traefik.http.routers.api.tls.certresolver=default"
      # - "traefik.http.routers.api.service=api@internal"
      # - "traefik.http.routers.api.middlewares=api-auth"
      # - "traefik.http.middlewares.api-auth.basicauth.users=${BASIC_AUTH}"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # security header middleware
      - traefik.http.middlewares.security-headers.headers.accesscontrolallowmethods=
        GET, OPTIONS, PUT
      - traefik.http.middlewares.security-headers.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.security-headers.headers.addvaryheader=true
      - traefik.http.middlewares.security-headers.headers.hostsproxyheaders=X-Forwarded-Host
      - traefik.http.middlewares.security-headers.headers.sslredirect=true
      - traefik.http.middlewares.security-headers.headers.sslproxyheaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.security-headers.headers.stsseconds=63072000
      - traefik.http.middlewares.security-headers.headers.stsincludesubdomains=true
      - traefik.http.middlewares.security-headers.headers.stspreload=true
      - traefik.http.middlewares.security-headers.headers.forcestsheader=true
      - traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=sameorigin
      - traefik.http.middlewares.security-headers.headers.contenttypenosniff=true
      - traefik.http.middlewares.security-headers.headers.browserxssfilter=true
      - traefik.http.middlewares.security-headers.headers.referrerpolicy=same-origin
      # - traefik.http.middlewares.security-headers.headers.featurepolicy=
      #   camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; 
      #   usb 'none'; vr 'none';
      - traefik.http.middlewares.security-headers.headers.customresponseheaders.X-Robots-Tag=
        none,noarchive,nosnippet,notranslate,noimageindex

      # loadbalancer service
      - "traefik.http.services.traefik.loadbalancer.server.port=80"

    networks:
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
    restart: always

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
